<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ncst.hospitaloutpatient.mapper.outpatient.RegistrationMapper">

    <insert id="insertRegistration"
            parameterType="com.ncst.hospitaloutpatient.model.dto.outpatient.CreateRegistrationRequest"
            useGeneratedKeys="true" keyProperty="generatedRegistrationId">
        INSERT INTO registration
        (patient_id, department_id, doctor_id, visit_date, period, number_type,
         init_quota, used_quota, settlement_type_id, payment_method_id, payable_amount, medical_record_book)
        VALUES
            (#{patientId}, #{departmentId}, #{doctorId}, #{visitDate}, #{period}, #{numberType},
             #{initQuota}, #{usedQuota}, #{settlementTypeId}, #{paymentMethodId}, #{payableAmount}, #{medicalRecordBook})
    </insert>

    <insert id="insertPatientVisit"
            parameterType="map"
            useGeneratedKeys="true" keyProperty="visitId">
        INSERT INTO patient_visit
        (patient_id, registration_id, department_id, doctor_id, visit_date,
         current_status, status_changed_at, created_at, updated_at)
        VALUES
            (#{patientId}, #{registrationId}, #{departmentId}, #{doctorId}, #{visitDate},
             #{currentStatus}, #{statusChangedAt}, #{createdAt}, #{updatedAt})
    </insert>

    <update id="incrementDoctorQuotaUsed">
        UPDATE doctor_quota
        SET used = used + 1
        WHERE staff_id = #{staffId}
        AND quota_date = #{quotaDate}
    </update>

    <insert id="insertTransaction" parameterType="com.ncst.hospitaloutpatient.model.entity.outpatient.Transaction" useGeneratedKeys="true" keyProperty="transactionId">
        INSERT INTO transaction (
            business_type, registration_id, patient_id, amount,
            transaction_type, payment_method_id, transaction_time, cashier_id, remark, settlement_type_id
        ) VALUES (
                     #{businessType}, #{registrationId}, #{patientId}, #{amount},
                     #{transactionType}, #{paymentMethodId}, #{transactionTime}, #{cashierId}, #{remark}, #{settlementTypeId}
                 )
    </insert>

    <select id="selectRegistrationById" resultType="com.ncst.hospitaloutpatient.model.dto.outpatient.RegistrationDetailResponse">
        SELECT
            registration_id,
            patient_id,
            department_id,
            doctor_id,
            visit_date,
            period,
            number_type,
            init_quota,
            used_quota,
            settlement_type_id,
            payment_method_id,
            payable_amount,
            medical_record_book
        FROM registration
        WHERE registration_id = #{registrationId}
    </select>

    <select id="selectRegistrations" resultType="com.ncst.hospitaloutpatient.model.dto.outpatient.RegistrationDetailResponse">
        SELECT
        r.registration_id,
        r.patient_id,
        p.name AS patient_name,
        r.department_id,
        dept.department_name AS department_name,
        r.doctor_id,
        d.name AS doctor_name,
        r.visit_date,
        r.period,
        r.number_type,
        r.init_quota,
        r.used_quota,
        r.settlement_type_id,
        st.name AS settlement_type_name,
        r.payment_method_id,
        pm.name AS payment_method_name,
        r.payable_amount,
        r.medical_record_book,
        v.current_status
        FROM registration r
        LEFT JOIN patient p ON r.patient_id = p.patient_id
        LEFT JOIN staff d ON r.doctor_id = d.staff_id
        LEFT JOIN department dept ON r.department_id = dept.department_id
        LEFT JOIN settlement_type st ON r.settlement_type_id = st.settlement_type_id
        LEFT JOIN payment_method pm ON r.payment_method_id = pm.payment_method_id
        LEFT JOIN patient_visit v ON r.registration_id = v.registration_id
        <where>
            <if test="date != null">
                AND r.visit_date = #{date}
            </if>
            <if test="deptId != null">
                AND r.department_id = #{deptId}
            </if>
            <if test="doctorId != null">
                AND r.doctor_id = #{doctorId}
            </if>
            <if test="status != null and status != ''">
                AND v.current_status = #{status}
            </if>
            <if test="keyword != null and keyword != ''">
                AND (
                CAST(r.registration_id AS CHAR) LIKE CONCAT('%', #{keyword}, '%')
                OR CAST(r.patient_id AS CHAR) LIKE CONCAT('%', #{keyword}, '%')
                OR p.name LIKE CONCAT('%', #{keyword}, '%')
                OR d.name LIKE CONCAT('%', #{keyword}, '%')
                OR dept.department_name LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
        </where>
        <choose>
            <when test="sortBy == 'date'">
                ORDER BY r.visit_date
            </when>
            <when test="sortBy == 'patientName'">
                ORDER BY CONVERT(p.name USING gbk)
            </when>
            <when test="sortBy == 'doctorName'">
                ORDER BY CONVERT(d.name USING gbk)
            </when>
            <otherwise>
                ORDER BY r.visit_date
            </otherwise>
        </choose>
        <if test="order != null and order.toLowerCase() == 'asc'">
            ASC
        </if>
        <if test="order == null or order.toLowerCase() != 'asc'">
            DESC
        </if>
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <select id="countRegistrations" resultType="long">
        SELECT COUNT(1)
        FROM registration r
        LEFT JOIN patient p ON r.patient_id = p.patient_id
        LEFT JOIN staff d ON r.doctor_id = d.staff_id
        LEFT JOIN department dept ON r.department_id = dept.department_id
        LEFT JOIN patient_visit v ON r.registration_id = v.registration_id
        <where>
            <if test="date != null">
                AND r.visit_date = #{date}
            </if>
            <if test="deptId != null">
                AND r.department_id = #{deptId}
            </if>
            <if test="doctorId != null">
                AND r.doctor_id = #{doctorId}
            </if>
            <if test="status != null and status != ''">
                AND v.current_status = #{status}
            </if>
            <if test="keyword != null and keyword != ''">
                AND (
                CAST(r.registration_id AS CHAR) LIKE CONCAT('%', #{keyword}, '%')
                OR CAST(r.patient_id AS CHAR) LIKE CONCAT('%', #{keyword}, '%')
                OR p.name LIKE CONCAT('%', #{keyword}, '%')
                OR d.name LIKE CONCAT('%', #{keyword}, '%')
                OR dept.department_name LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
        </where>
    </select>

    <update id="updatePatientVisitStatusToFinished">
        UPDATE patient_visit
        SET current_status = 'FINISHED', updated_at = NOW(), status_changed_at = NOW()
        WHERE registration_id = #{registrationId} AND current_status != 'FINISHED'
    </update>

    <select id="selectMaxPatientNo" resultType="java.lang.String">
        SELECT MAX(patient_no) FROM patient
    </select>

    <select id="getDepartmentNameById" resultType="string">
        SELECT department_name FROM department WHERE department_id = #{departmentId}
    </select>

    <select id="getDoctorNameById" resultType="string">
        SELECT name FROM staff WHERE staff_id = #{doctorId}
    </select>

    <select id="getSettlementTypeNameById" resultType="string">
        SELECT name FROM settlement_type WHERE settlement_type_id = #{settlementTypeId}
    </select>

    <select id="getPaymentMethodNameById" resultType="string">
        SELECT name FROM payment_method WHERE payment_method_id = #{paymentMethodId}
    </select>

</mapper>